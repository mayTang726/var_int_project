param_type = "SIFT",
url = sift_url,
req_type = "GET",
body = sift_request_body_json
)
# calculate score
result_resolve <- function(search_result,db_type) {
print('进入回调中')
print(search_result)
print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
##  change list to json format as post request body
sift_request_body_json <- toJSON(list(hgvs_notations = sift_request_body_list), pretty = TRUE)
print(sift_request_body_json)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_json
)
# calculate score
result_resolve <- function(search_result,db_type) {
print('进入回调中')
print(search_result)
print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
sift_request_body_json <- gsub(" ", "", sift_request_body_json)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_json
)
result_resolve <- function(search_result,db_type) {
print('进入回调中')
print(search_result)
print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
##  change list to json format as post request body
sift_request_body_json <- toJSON(list(hgvs_notations = sift_request_body_list), pretty = TRUE)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_json
)
# calculate score
result_resolve <- function(search_result,db_type) {
print('进入回调中')
print(search_result)
print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
##  change list to json format as post request body
sift_request_body_json <- toJSON(list(hgvs_notations = sift_request_body_list), pretty = TRUE)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_json
)
# calculate score
result_resolve <- function(search_result,db_type) {
print('进入回调中')
print(search_result)
print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
##  change list to json format as post request body
sift_request_body_json <- toJSON(list(hgvs_notations = sift_request_body_list), pretty = TRUE)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_json
)
# calculate score
result_resolve <- function(search_result,db_type) {
print('进入回调中')
print(search_result)
print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
##  change list to json format as post request body
sift_request_body_json <- toJSON(list(hgvs_notations = sift_request_body_list), pretty = TRUE)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_json
)
# calculate score
result_resolve <- function(search_result,db_type) {
print('进入回调中')
print(search_result)
print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
##  change list to json format as post request body
sift_request_body_json <- toJSON(list(hgvs_notations = sift_request_body_list), pretty = TRUE)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_json
)
# calculate score
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
# print(search_result)
# print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
source("Rcode/db_connect_common.R")
source("utils/request_body_resolve.R")
source("Rcode/resolve_varsome_response.R")
## connect cosmic
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
##  change list to json format as post request body
sift_request_body_json <- toJSON(list(hgvs_notations = sift_request_body_list), pretty = TRUE)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_json
)
# calculate score
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
# print(search_result)
# print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
split_list <- split(param$body, ceiling(seq_along(param$body) / 300))
split_list <- split(sift_request_body_list, ceiling(seq_along(sift_request_body_list) / 300))
print(length(split_list))
for (i in 1:length(split_list)) {
print(i)
}
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
print(split_list[[1]])
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_list
)
# calculate score
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
# print(search_result)
# print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_list
)
# calculate score
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
# print(search_result)
# print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_list
)
# calculate score
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
# print(search_result)
# print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
source("Rcode/db_connect_common.R")
## connect cosmic
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_list
)
# calculate score
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
# print(search_result)
# print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_list
)
# calculate score
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
# print(search_result)
# print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
source("Rcode/db_connect_common.R")
## connect cosmic
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_list
)
# calculate score
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
# print(search_result)
# print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_list
)
# calculate score
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
print(search_result)
# print(search_result$response_data)
search_result <- search_result
}
search_result <- array()
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
## connect cosmic
db_type <- "SIFT"  # 到时候要修改为动态的
sift_url <- "https://grch37.rest.ensembl.org/vep/human/hgvs"
#request body prepare
## combine ensembl_name and hgvs as a string and put it to the list
sift_request_body_list <- hg19_df %>%
filter(!is.na(ensembl_name) & !is.na(ensembl_hgvs)) %>%
mutate(combined = paste(ensembl_name, ensembl_hgvs, sep = ":")) %>%
pull(combined)
#dbname, host, port, user, password, API, parameter_num
sift_obj <- list(
API = TRUE,
param_type = "SIFT",
url = sift_url,
req_type = "POST",
body = sift_request_body_list
)
# calculate score
search_result <- list()
result_resolve <- function(search_result,db_type) {
# print('进入回调中')
print(search_result)
# print(search_result$response_data)
search_result <- search_result$response_data
}
db_check_fun <- function(db_type) {
search_result <- connect_function(sift_obj) # list[[1]]: param_type, list[[2]]: list ---> searched information
result_resolve(search_result,db_type)
}
db_check_fun(db_type)
View(search_result)
