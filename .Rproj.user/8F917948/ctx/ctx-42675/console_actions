{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        2
    ],
    "data": [
        "\nR version 4.3.2 (2023-10-31) -- \"Eye Holes\"\nCopyright (C) 2023 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin20 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n[Workspace loaded from ~/Desktop/internship project/project/var_int_project/.RData]\n\n",
        "> ",
        "# source(\"Rcode/db_connect_common.R\")",
        "> ",
        "",
        "> ",
        "#parse .bed file",
        "> ",
        "bed_lines <- readLines('./data/hotspot_region_Oncomine_Focus_DNA_Hotspots_v1.4.bed', encoding = \"UTF-8\")[-1]",
        "> ",
        "bed_data <- read.table(text = bed_lines, header = FALSE, sep = \"\\t\")",
        "> ",
        "# change list to dataframe",
        "> ",
        "bed_df <- data.frame(",
        "+ ",
        "  chromosome = character(),",
        "+ ",
        "  start_position = numeric(),",
        "+ ",
        "  end_position = numeric(),",
        "+ ",
        "  cosmic_id = character(),",
        "+ ",
        "  score = numeric(),",
        "+ ",
        "  strand = character(),",
        "+ ",
        "  variant_info = character(),",
        "+ ",
        "  stringsAsFactors = FALSE  # 确保字符型数据不会转换为因子",
        "+ ",
        ")",
        "> ",
        "chromosome <- c(bed_data[1])",
        "> ",
        "start_position <- c(bed_data[2])",
        "> ",
        "end_position <- c(bed_data[3])",
        "> ",
        "cosmic_id <- c(bed_data[4])",
        "> ",
        "score <- c(bed_data[5])",
        "> ",
        "strand <- c(bed_data[6])",
        "> ",
        "variant_info <- c(bed_data[7])",
        "> ",
        "",
        "> ",
        "bed_df = data.frame(chromosome,start_position,end_position,cosmic_id,score,strand,variant_info)",
        "> ",
        "colnames(bed_df) <- c(\"chromosome\", \"start_position\", \"end_position\", \"cosmic_id\", \"score\", \"strand\", \"variant_info\")",
        "> ",
        "",
        "> ",
        "#get chr17 df",
        "> ",
        "chr17_df <- subset(bed_df, chromosome == 'chr17')",
        "> ",
        "### 当前处理方式只用于当前这个数据库中 ",
        "> ",
        "# 如果ANCHOR至少有2个 --> 搜索方式不变： chr17:porition:REF:OBS",
        "> ",
        "# 如果ANCHOR为单个变异位点 --> 搜索方式改为： chr17:position:ANCHOR:OBS",
        "> ",
        "",
        "> ",
        "# 使用strsplit()函数将variant_info列的值分割成一个列表",
        "> ",
        "split_info <- strsplit(chr17_df$variant_info, \";\")",
        "> ",
        "",
        "> ",
        "# 初始化用于存储拆分值的向量",
        "> ",
        "REF <- character(length = nrow(chr17_df))",
        "> ",
        "OBS <- character(length = nrow(chr17_df))",
        "> ",
        "ANCHOR <- character(length = nrow(chr17_df))",
        "> ",
        "",
        "> ",
        "# 从列表中提取REF，OBS和ANCHOR的值",
        "> ",
        "for (i in 1:length(split_info)) {",
        "+ ",
        "  for (j in 1:length(split_info[[i]])) {",
        "+ ",
        "    if (grepl(\"^REF=\", split_info[[i]][j])) {",
        "+ ",
        "      REF[i] <- gsub(\"^REF=(.*)$\", \"\\\\1\", split_info[[i]][j])",
        "+ ",
        "    } else if (grepl(\"^OBS=\", split_info[[i]][j])) {",
        "+ ",
        "      OBS[i] <- gsub(\"^OBS=(.*)$\", \"\\\\1\", split_info[[i]][j])",
        "+ ",
        "    } else if (grepl(\"^ANCHOR=\", split_info[[i]][j])) {",
        "+ ",
        "      ANCHOR[i] <- gsub(\"^ANCHOR=(.*)$\", \"\\\\1\", split_info[[i]][j])",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "# 创建REF，OBS和ANCHOR列，用于合成搜索内容",
        "> ",
        "new_df <- data.frame(REF = REF, OBS = OBS, ANCHOR = ANCHOR)",
        "> ",
        "# 将新的数据框添加到原始数据框中",
        "> ",
        "chr17_df <- cbind(chr17_df, new_df)",
        "> ",
        "chr17_df$variant_info <- paste0(chr17_df$ANCHOR, \":\", chr17_df$OBS)",
        "> ",
        "",
        "> ",
        "chr17_df$search_column <- apply(chr17_df, 1, function(row){",
        "+ ",
        "  paste(row['chromosome'],row['start_position'],row['variant_info'], sep = ':')",
        "+ ",
        "})",
        "> ",
        "",
        "> ",
        "varraint_array <- as.list(chr17_df$search_column)",
        "> ",
        "",
        "> ",
        "print(varraint_array)",
        "[[1]]\n[1] \"chr17:37868204:G:C\"\n\n[[2]]\n[1] \"chr17:37868204:G:A\"\n\n[[3]]\n[1] \"chr17:37868206:A:C\"\n\n[[4]]\n[1] \"chr17:37868207:T:T\"\n\n[[5]]\n[1] \"chr17:37868207:T:A\"\n\n[[6]]\n[1] \"chr17:37868240:G:G\"\n\n[[7]]\n[1] \"chr17:37879657:C:A\"\n\n[[8]]\n[1] \"chr17:37879902:A:T\"\n\n[[9]]\n[1] \"chr17:37880218:G:A\"\n\n[[10]]\n[1] \"chr17:37880218:G:CC\"\n\n[[11]]\n[1] \"chr17:37880219:T:C\"\n\n[[12]]\n[1] \"chr17:37880219:T:G\"\n\n[[13]]\n[1] \"chr17:37880256:T:G\"\n\n[[14]]\n[1] \"chr17:37880260:A:C\"\n\n[[15]]\n[1] \"chr17:37880260:A:A\"\n\n[[16]]\n[1] \"chr17:37880260:A:T\"",
        "\n\n[[17]]\n[1] \"chr17:37880995:C:ATACGTGATGGC\"\n\n[[18]]\n[1] \"chr17:37880996:T:TACGTGATGGCT\"\n\n[[19]]\n[1] \"chr17:37880996:T:A\"\n\n[[20]]\n[1] \"chr17:37880996:T:CTTT\"\n\n[[21]]\n[1] \"chr17:37880996:T:TTGT\"\n\n[[22]]\n[1] \"chr17:37880996:T:TTAT\"\n\n[[23]]\n[1] \"chr17:37880996:T:T\"\n\n[[24]]\n[1] \"chr17:37880997:G:TTT\"\n\n[[25]]\n[1] \"chr17:37880997:G:TAT\"\n\n[[26]]\n[1] \"chr17:37880997:G:TCT\"\n\n[[27]]\n[1] \"chr17:37880997:G:TGT\"\n\n[[28]]\n[1] \"chr17:37880997:G:T\"\n\n[[29]]\n[1] \"chr17:37880998:G:TCT\"\n\n[[30]]\n[1] \"chr17:37880999:T:T\"\n\n[[31]]\n",
        "[1] \"chr17:37880999:T:A\"\n\n[[32]]\n[1] \"chr17:37880999:T:C\"\n\n[[33]]\n[1] \"chr17:37881000:G:C\"\n\n[[34]]\n[1] \"chr17:37881002:G:TGTGGG\"\n\n[[35]]\n[1] \"chr17:37881003:G:GGCTCCCCA\"\n\n[[36]]\n[1] \"chr17:37881004:G:GGG\"\n\n[[37]]\n[1] \"chr17:37881006:T:CTGTGGGCT\"\n\n[[38]]\n[1] \"chr17:37881010:C:GGGCTCCCC\"\n\n[[39]]\n[1] \"chr17:37881010:C:TGGCTCCCC\"\n\n[[40]]\n[1] \"chr17:37881011:A:GGCTCCCCA\"\n\n[[41]]\n[1] \"chr17:37881331:C:A\"\n\n[[42]]\n[1] \"chr17:37881332:G:A\"\n\n[[43]]\n[1] \"chr17:37881409:T:T\"\n\n[[44]]\n[1] \"chr17:37881413:C:G\"\n\n[[45]]\n[1]",
        " \"chr17:37881615:C:T\"\n\n[[46]]\n[1] \"chr17:37881616:C:A\"\n\n",
        "> ",
        "# print(chr17_df)",
        "> ",
        "source(\"Rcode/read_bed.R\")",
        "> ",
        "# change list to json charactor for post request use",
        "> ",
        "variants_char <- character()",
        "> ",
        "variant_list_liftover <- varraint_array",
        "> ",
        "",
        "> ",
        "print(variant_list_liftover)",
        "[[1]]\n[1] \"chr17:37868204:G:C\"\n\n[[2]]\n[1] \"chr17:37868204:G:A\"\n\n[[3]]\n[1] \"chr17:37868206:A:C\"\n\n[[4]]\n[1] \"chr17:37868207:T:T\"\n\n[[5]]\n[1] \"chr17:37868207:T:A\"\n\n[[6]]\n[1] \"chr17:37868240:G:G\"\n\n[[7]]\n[1] \"chr17:37879657:C:A\"\n\n[[8]]\n[1] \"chr17:37879902:A:T\"\n\n[[9]]\n[1] \"chr17:37880218:G:A\"\n\n[[10]]\n[1] \"chr17:37880218:G:CC\"\n\n[[11]]\n[1] \"chr17:37880219:T:C\"\n\n[[12]]\n[1] \"chr17:37880219:T:G\"\n\n[[13]]\n[1] \"chr17:37880256:T:G\"\n\n[[14]]\n[1] \"chr17:37880260:A:C\"\n\n[[15]]\n[1] \"chr17:37880260:A:A\"\n\n[[16]]\n[1] \"chr17:37880260:A:T\"",
        "\n\n[[17]]\n[1] \"chr17:37880995:C:ATACGTGATGGC\"\n\n[[18]]\n[1] \"chr17:37880996:T:TACGTGATGGCT\"\n\n[[19]]\n[1] \"chr17:37880996:T:A\"\n\n[[20]]\n[1] \"chr17:37880996:T:CTTT\"\n\n[[21]]\n[1] \"chr17:37880996:T:TTGT\"\n\n[[22]]\n[1] \"chr17:37880996:T:TTAT\"\n\n[[23]]\n[1] \"chr17:37880996:T:T\"\n\n[[24]]\n[1] \"chr17:37880997:G:TTT\"\n\n[[25]]\n[1] \"chr17:37880997:G:TAT\"\n\n[[26]]\n[1] \"chr17:37880997:G:TCT\"\n\n[[27]]\n[1] \"chr17:37880997:G:TGT\"\n\n[[28]]\n[1] \"chr17:37880997:G:T\"\n\n[[29]]\n[1] \"chr17:37880998:G:TCT\"\n\n[[30]]\n[1] \"chr17:37880999:T:T\"\n\n[[31]]\n",
        "[1] \"chr17:37880999:T:A\"\n\n[[32]]\n[1] \"chr17:37880999:T:C\"\n\n[[33]]\n[1] \"chr17:37881000:G:C\"\n\n[[34]]\n[1] \"chr17:37881002:G:TGTGGG\"\n\n[[35]]\n[1] \"chr17:37881003:G:GGCTCCCCA\"\n\n[[36]]\n[1] \"chr17:37881004:G:GGG\"\n\n[[37]]\n[1] \"chr17:37881006:T:CTGTGGGCT\"\n\n[[38]]\n[1] \"chr17:37881010:C:GGGCTCCCC\"\n\n[[39]]\n[1] \"chr17:37881010:C:TGGCTCCCC\"\n\n[[40]]\n[1] \"chr17:37881011:A:GGCTCCCCA\"\n\n[[41]]\n[1] \"chr17:37881331:C:A\"\n\n[[42]]\n[1] \"chr17:37881332:G:A\"\n\n[[43]]\n[1] \"chr17:37881409:T:T\"\n\n[[44]]\n[1] \"chr17:37881413:C:G\"\n\n[[45]]\n[1]",
        " \"chr17:37881615:C:T\"\n\n[[46]]\n[1] \"chr17:37881616:C:A\"\n\n",
        "> ",
        "# cosmic doesn`t` provide API for connecting database, so dirrectly download database to use  ",
        "> ",
        "# install.packages(\"promises\")  ",
        "> ",
        "# library(promises)  ",
        "> ",
        "",
        "> ",
        "# connect db",
        "> ",
        "getwd()",
        "[1] \"/Users/stan/Desktop/internship project/project/var_int_project\"\n",
        "> ",
        "source(\"Rcode/db_connect_common.R\")",
        "Error in install.packages : Updating loaded packages\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-x86_64/contrib/4.3/sqldf_0.4-11.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 76749 bytes (74 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 74 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/p4/2jf9yhzs1nb06w2znky4s3f00000gn/T//RtmpsIubgJ/downloaded_packages\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-x86_64/contrib/4.3/httr_1.4.7.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 474940 bytes (463 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 463 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/p4/2jf9yhzs1nb06w2znky4s3f00000gn/T//RtmpsIubgJ/downloaded_packages\n",
        "> ",
        "source(\"Rcode/read_bed.R\")",
        "> ",
        "",
        "> ",
        "variant_list_liftover <- varraint_array # for liftover",
        "> ",
        "",
        "> ",
        "# set post request body",
        "> ",
        "variants_char <- character()",
        "> ",
        "request_body <- function (varraint_array) {",
        "+ ",
        "  # change list to json charactor for post request use",
        "+ ",
        "  for (i in 1:length(varraint_array)) {",
        "+ ",
        "    character_ <- paste(\"'\",varraint_array[[i]],\"'\")",
        "+ ",
        "    variants_char <- append(variants_char, character_)",
        "+ ",
        "  }",
        "+ ",
        "  variants_char <- paste(variants_char, collapse = ',')",
        "+ ",
        "  variants_char <- paste(\"{'variants':\",\"[\",variants_char,\"]}\")",
        "+ ",
        "  variants_char <- gsub(\" \",\"\",variants_char)",
        "+ ",
        "  variants_char <- gsub(\"'\",'\"',variants_char)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "db_type <- \"varsome_19\"  # 到时候要修改为动态的",
        "> ",
        "varsome_url <- \"\"",
        "> ",
        "varsome_liftover_url <- \"\"",
        "> ",
        "if(db_type == \"varsome_liftover\"){",
        "+ ",
        "  varsome_liftover_url <- \"https://api.varsome.com/lookup/lifted-over-variant/\"",
        "+ ",
        "}else if(db_type == 'varsome_19') {",
        "+ ",
        "  varsome_url <- \"https://api.varsome.com/lookup/batch/hg19?add-source-databases=all\"",
        "+ ",
        "}else if(db_type == 'varsome_38') {",
        "+ ",
        "  varsome_url <- \"https://api.varsome.com/lookup/batch/hg38?add-source-databases=all\"",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "varsome_19_obj <- list(",
        "+ ",
        "  API = TRUE,",
        "+ ",
        "  param_type = \"varsome\",",
        "+ ",
        "  url = varsome_url,",
        "+ ",
        "  req_type = \"POST\",",
        "+ ",
        "  token = \"Token W0beUnL?kAjoieM4ueklHW%p5AzMVaG@ju@8dD@y\",",
        "+ ",
        "  body = variants_char",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "varsome_38_obj <- list(",
        "+ ",
        "  API = TRUE,",
        "+ ",
        "  param_type = \"varsome\",",
        "+ ",
        "  url = varsome_url,",
        "+ ",
        "  req_type = \"POST\",",
        "+ ",
        "  token = \"Token W0beUnL?kAjoieM4ueklHW%p5AzMVaG@ju@8dD@y\",",
        "+ ",
        "  body = variants_char",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "varsome_liftover_obj <- list(",
        "+ ",
        "  API = TRUE,",
        "+ ",
        "  param_type = \"varsome\",",
        "+ ",
        "  url = varsome_liftover_url,",
        "+ ",
        "  req_type = \"GET\",",
        "+ ",
        "  token = \"Token W0beUnL?kAjoieM4ueklHW%p5AzMVaG@ju@8dD@y\",",
        "+ ",
        "  body = variant_list_liftover",
        "+ ",
        ")",
        "> ",
        "# calculate score",
        "> ",
        "search_result <- list()",
        "> ",
        "calculate_score <- function(search_result,db_type) {",
        "+ ",
        "  print('进入回调中')",
        "+ ",
        "  if (db_type == 'varsome_19') {",
        "+ ",
        "    db_type = 'varsome_liftover'",
        "+ ",
        "  } else if(db_type == 'varsome_liftover'){",
        "+ ",
        "    write(search_result,file=\"data/chr_list_liftover.txt\")",
        "+ ",
        "    db_type = 'varsome_38'",
        "+ ",
        "    request_body(search_result)",
        "+ ",
        "    varsome_38_obj$body <- variants_char",
        "+ ",
        "    db_check_fun(db_type)",
        "+ ",
        "  }else {",
        "+ ",
        "    # hg38 chromosome format one to one corresponding to hg19",
        "+ ",
        "    request_body(search_result)",
        "+ ",
        "    db_check_fun(db_type)",
        "+ ",
        "  }",
        "+ ",
        "  # search_result <- search_result",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "print(varsome_obj$body)",
        "[1] \"{\\\"variants\\\":[\\\"chr17:37868204:G:C\\\",\\\"chr17:37868204:G:A\\\",\\\"chr17:37868206:A:C\\\",\\\"chr17:37868207:T:T\\\",\\\"chr17:37868207:T:A\\\",\\\"chr17:37868240:G:G\\\",\\\"chr17:37879657:C:A\\\",\\\"chr17:37879902:A:T\\\",\\\"chr17:37880218:G:A\\\",\\\"chr17:37880218:TT:CC\\\",\\\"chr17:37880219:T:C\\\",\\\"chr17:37880219:T:G\\\",\\\"chr17:37880256:T:G\\\",\\\"chr17:37880260:A:C\\\",\\\"chr17:37880260:A:A\\\",\\\"chr17:37880260:A:T\\\",\\\"chr17:37880995::ATACGTGATGGC\\\",\\\"chr17:37880996::TACGTGATGGCT\\\",\\\"chr17:37880996:T:A\\\",\\\"chr17:37880996:G:CTTT\\\",\\\"chr17:37880996:G:TTGT\\\",\\\"chr17:37880996:G:TTAT\\\",\\\"chr17:37880996:T:T\\\",\\\"chr17:37880997::TTT\\\",\\\"chr17:37880997::TAT\\\",\\\"chr17:37880997::TCT\\\",\\\"chr17:37880997::TGT\\\",\\\"chr17:37880997:G:T\\\",\\\"chr17:37880998::TCT\\\",\\\"chr17:37880999:T:T\\\",\\\"chr17:37880999:T:A\\\",\\\"chr17:37880999:T:C\\\",\\\"chr17:37881000:G:C\\\",\\\"chr17:37881002::TGTGGG\\\",\\\"chr17:37881003::GGCTCCCCA\\\",\\\"chr17:37881004::GGG\\\",\\\"chr17:37881006::CTGTGGGCT\\\",\\\"chr17:37881010::GGGCTCCCC\\\",\\\"chr17:37881010::TGGCTCCCC\\\",\\\"chr17:37881011::GGCTCCCCA\\\",\\\"chr17:37881331:C:A\\\",\\\"chr17:37881332:G:A\\\",\\\"chr17:37881409:T:T\\\",\\\"chr17:37881413:C:G\\\",\\\"chr17:37881615:C:T\\\",\\\"chr17:37881616:C:A\\\"]}\"",
        "\n",
        "> ",
        "param <- \"\"",
        "> ",
        "search_result <- \"\"",
        "> ",
        "",
        "> ",
        "db_check_fun <- function(db_type) {",
        "+ ",
        "  if(db_type == 'varsome_19') {",
        "+ ",
        "    param <- varsome_19_obj",
        "+ ",
        "    request_body(varraint_array)",
        "+ ",
        "    varsome_19_obj$body <- variants_char",
        "+ ",
        "  }else if(db_type == 'varsome_liftover') {",
        "+ ",
        "    param <- varsome_liftover_obj",
        "+ ",
        "  }else if(db_type == 'varsome_38') {",
        "+ ",
        "    param <- varsome_38_obj",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  search_result <- connect_function(param) # list[[1]]: param_type, list[[2]]: list ---> searched information",
        "+ ",
        "  calculate_score(search_result,db_type)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "db_check_fun(db_type)",
        "[1] \"inter API part\"\nResponse [https://api.varsome.com/lookup/batch/hg19?add-source-databases=all]\n  Date: 2024-04-29 11:15\n  Status: 400\n  Content-Type: application/json; charset=utf-8\n  Size: 40 B\n\n[1] \"HTTP post request error: 400\"\n[1] \"进入回调中\"\n",
        "> ",
        "# cosmic doesn`t` provide API for connecting database, so dirrectly download database to use  ",
        "> ",
        "# install.packages(\"promises\")  ",
        "> ",
        "# library(promises)  ",
        "> ",
        "",
        "> ",
        "# connect db",
        "> ",
        "getwd()",
        "[1] \"/Users/stan/Desktop/internship project/project/var_int_project\"\n",
        "> ",
        "source(\"Rcode/db_connect_common.R\")",
        "Error in install.packages : Updating loaded packages\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-x86_64/contrib/4.3/sqldf_0.4-11.tgz'\n",
        "Warning in install.packages :\n  URL 'https://cran.rstudio.com/bin/macosx/big-sur-x86_64/contrib/4.3/sqldf_0.4-11.tgz': status was 'Couldn't resolve host name'\n",
        "Error in download.file(url, destfile, method, mode = \"wb\", ...) : \n  cannot open URL 'https://cran.rstudio.com/bin/macosx/big-sur-x86_64/contrib/4.3/sqldf_0.4-11.tgz'\n",
        "Warning in install.packages :\n  download of package ‘sqldf’ failed\nError in install.packages : Updating loaded packages\n",
        "> ",
        "source(\"Rcode/read_bed.R\")",
        "> ",
        "",
        "> ",
        "variant_list_liftover <- varraint_array # for liftover",
        "> ",
        "",
        "> ",
        "# set post request body",
        "> ",
        "variants_char <- character()",
        "> ",
        "request_body <- function (varraint_array) {",
        "+ ",
        "  # change list to json charactor for post request use",
        "+ ",
        "  for (i in 1:length(varraint_array)) {",
        "+ ",
        "    character_ <- paste(\"'\",varraint_array[[i]],\"'\")",
        "+ ",
        "    variants_char <- append(variants_char, character_)",
        "+ ",
        "  }",
        "+ ",
        "  variants_char <- paste(variants_char, collapse = ',')",
        "+ ",
        "  variants_char <- paste(\"{'variants':\",\"[\",variants_char,\"]}\")",
        "+ ",
        "  variants_char <- gsub(\" \",\"\",variants_char)",
        "+ ",
        "  variants_char <- gsub(\"'\",'\"',variants_char)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "db_type <- \"varsome_19\"  # 到时候要修改为动态的",
        "> ",
        "varsome_url <- \"\"",
        "> ",
        "varsome_liftover_url <- \"\"",
        "> ",
        "if(db_type == \"varsome_liftover\"){",
        "+ ",
        "  varsome_liftover_url <- \"https://api.varsome.com/lookup/lifted-over-variant/\"",
        "+ ",
        "}else if(db_type == 'varsome_19') {",
        "+ ",
        "  varsome_url <- \"https://api.varsome.com/lookup/batch/hg19?add-source-databases=all\"",
        "+ ",
        "}else if(db_type == 'varsome_38') {",
        "+ ",
        "  varsome_url <- \"https://api.varsome.com/lookup/batch/hg38?add-source-databases=all\"",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "varsome_19_obj <- list(",
        "+ ",
        "  API = TRUE,",
        "+ ",
        "  param_type = \"varsome\",",
        "+ ",
        "  url = varsome_url,",
        "+ ",
        "  req_type = \"POST\",",
        "+ ",
        "  token = \"Token W0beUnL?kAjoieM4ueklHW%p5AzMVaG@ju@8dD@y\",",
        "+ ",
        "  body = variants_char",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "varsome_38_obj <- list(",
        "+ ",
        "  API = TRUE,",
        "+ ",
        "  param_type = \"varsome\",",
        "+ ",
        "  url = varsome_url,",
        "+ ",
        "  req_type = \"POST\",",
        "+ ",
        "  token = \"Token W0beUnL?kAjoieM4ueklHW%p5AzMVaG@ju@8dD@y\",",
        "+ ",
        "  body = variants_char",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "varsome_liftover_obj <- list(",
        "+ ",
        "  API = TRUE,",
        "+ ",
        "  param_type = \"varsome\",",
        "+ ",
        "  url = varsome_liftover_url,",
        "+ ",
        "  req_type = \"GET\",",
        "+ ",
        "  token = \"Token W0beUnL?kAjoieM4ueklHW%p5AzMVaG@ju@8dD@y\",",
        "+ ",
        "  body = variant_list_liftover",
        "+ ",
        ")",
        "> ",
        "# calculate score",
        "> ",
        "search_result <- list()",
        "> ",
        "calculate_score <- function(search_result,db_type) {",
        "+ ",
        "  print('进入回调中')",
        "+ ",
        "  if (db_type == 'varsome_19') {",
        "+ ",
        "    db_type = 'varsome_liftover'",
        "+ ",
        "  } else if(db_type == 'varsome_liftover'){",
        "+ ",
        "    write(search_result,file=\"data/chr_list_liftover.txt\")",
        "+ ",
        "    db_type = 'varsome_38'",
        "+ ",
        "    request_body(search_result)",
        "+ ",
        "    varsome_38_obj$body <- variants_char",
        "+ ",
        "    db_check_fun(db_type)",
        "+ ",
        "  }else {",
        "+ ",
        "    # hg38 chromosome format one to one corresponding to hg19",
        "+ ",
        "    request_body(search_result)",
        "+ ",
        "    db_check_fun(db_type)",
        "+ ",
        "  }",
        "+ ",
        "  # search_result <- search_result",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "param <- \"\"",
        "> ",
        "search_result <- \"\"",
        "> ",
        "",
        "> ",
        "db_check_fun <- function(db_type) {",
        "+ ",
        "  if(db_type == 'varsome_19') {",
        "+ ",
        "    request_body(varraint_array)",
        "+ ",
        "    varsome_19_obj$body <- variants_char",
        "+ ",
        "    print(varsome_19_obj$body)",
        "+ ",
        "    param <- varsome_19_obj",
        "+ ",
        "  }else if(db_type == 'varsome_liftover') {",
        "+ ",
        "    param <- varsome_liftover_obj",
        "+ ",
        "  }else if(db_type == 'varsome_38') {",
        "+ ",
        "    param <- varsome_38_obj",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  search_result <- connect_function(param) # list[[1]]: param_type, list[[2]]: list ---> searched information",
        "+ ",
        "  calculate_score(search_result,db_type)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "db_check_fun(db_type)",
        "character(0)\n[1] \"inter API part\"\n",
        "Error in curl::curl_fetch_memory(url, handle = handle) : \n  Couldn't connect to server\n",
        "Called from: curl::curl_fetch_memory(url, handle = handle)\n",
        "Browse[1]> ",
        "c",
        "> ",
        "# cosmic doesn`t` provide API for connecting database, so dirrectly download database to use  ",
        "> ",
        "# install.packages(\"promises\")  ",
        "> ",
        "# library(promises)  ",
        "> ",
        "",
        "> ",
        "# connect db",
        "> ",
        "getwd()",
        "[1] \"/Users/stan/Desktop/internship project/project/var_int_project\"\n",
        "> ",
        "source(\"Rcode/db_connect_common.R\")",
        "Error in install.packages : Updating loaded packages\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-x86_64/contrib/4.3/sqldf_0.4-11.tgz'\n",
        "Warning in install.packages :\n  URL 'https://cran.rstudio.com/bin/macosx/big-sur-x86_64/contrib/4.3/sqldf_0.4-11.tgz': status was 'Couldn't resolve host name'\n",
        "Error in download.file(url, destfile, method, mode = \"wb\", ...) : \n  cannot open URL 'https://cran.rstudio.com/bin/macosx/big-sur-x86_64/contrib/4.3/sqldf_0.4-11.tgz'\n",
        "Warning in install.packages :\n  download of package ‘sqldf’ failed\nError in install.packages : Updating loaded packages\n",
        "> ",
        "source(\"Rcode/read_bed.R\")",
        "> ",
        "",
        "> ",
        "variant_list_liftover <- varraint_array # for liftover",
        "> ",
        "",
        "> ",
        "# set post request body",
        "> ",
        "variants_char <- character()",
        "> ",
        "request_body <- function (varraint_array) {",
        "+ ",
        "  # change list to json charactor for post request use",
        "+ ",
        "  for (i in 1:length(varraint_array)) {",
        "+ ",
        "    character_ <- paste(\"'\",varraint_array[[i]],\"'\")",
        "+ ",
        "    variants_char <- append(variants_char, character_)",
        "+ ",
        "  }",
        "+ ",
        "  variants_char <- paste(variants_char, collapse = ',')",
        "+ ",
        "  variants_char <- paste(\"{'variants':\",\"[\",variants_char,\"]}\")",
        "+ ",
        "  variants_char <- gsub(\" \",\"\",variants_char)",
        "+ ",
        "  variants_char <- gsub(\"'\",'\"',variants_char)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "db_type <- \"varsome_19\"  # 到时候要修改为动态的",
        "> ",
        "varsome_url <- \"\"",
        "> ",
        "varsome_liftover_url <- \"\"",
        "> ",
        "if(db_type == \"varsome_liftover\"){",
        "+ ",
        "  varsome_liftover_url <- \"https://api.varsome.com/lookup/lifted-over-variant/\"",
        "+ ",
        "}else if(db_type == 'varsome_19') {",
        "+ ",
        "  varsome_url <- \"https://api.varsome.com/lookup/batch/hg19?add-source-databases=all\"",
        "+ ",
        "}else if(db_type == 'varsome_38') {",
        "+ ",
        "  varsome_url <- \"https://api.varsome.com/lookup/batch/hg38?add-source-databases=all\"",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "varsome_19_obj <- list(",
        "+ ",
        "  API = TRUE,",
        "+ ",
        "  param_type = \"varsome\",",
        "+ ",
        "  url = varsome_url,",
        "+ ",
        "  req_type = \"POST\",",
        "+ ",
        "  token = \"Token W0beUnL?kAjoieM4ueklHW%p5AzMVaG@ju@8dD@y\",",
        "+ ",
        "  body = variants_char",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "varsome_38_obj <- list(",
        "+ ",
        "  API = TRUE,",
        "+ ",
        "  param_type = \"varsome\",",
        "+ ",
        "  url = varsome_url,",
        "+ ",
        "  req_type = \"POST\",",
        "+ ",
        "  token = \"Token W0beUnL?kAjoieM4ueklHW%p5AzMVaG@ju@8dD@y\",",
        "+ ",
        "  body = variants_char",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "varsome_liftover_obj <- list(",
        "+ ",
        "  API = TRUE,",
        "+ ",
        "  param_type = \"varsome\",",
        "+ ",
        "  url = varsome_liftover_url,",
        "+ ",
        "  req_type = \"GET\",",
        "+ ",
        "  token = \"Token W0beUnL?kAjoieM4ueklHW%p5AzMVaG@ju@8dD@y\",",
        "+ ",
        "  body = variant_list_liftover",
        "+ ",
        ")",
        "> ",
        "# calculate score",
        "> ",
        "search_result <- list()",
        "> ",
        "calculate_score <- function(search_result,db_type) {",
        "+ ",
        "  print('进入回调中')",
        "+ ",
        "  if (db_type == 'varsome_19') {",
        "+ ",
        "    db_type = 'varsome_liftover'",
        "+ ",
        "  } else if(db_type == 'varsome_liftover'){",
        "+ ",
        "    write(search_result,file=\"data/chr_list_liftover.txt\")",
        "+ ",
        "    db_type = 'varsome_38'",
        "+ ",
        "    request_body(search_result)",
        "+ ",
        "    varsome_38_obj$body <- variants_char",
        "+ ",
        "    param <- varsome_19_obj",
        "+ ",
        "    db_check_fun(db_type)",
        "+ ",
        "  }else {",
        "+ ",
        "    # hg38 chromosome format one to one corresponding to hg19",
        "+ ",
        "    request_body(search_result)",
        "+ ",
        "    db_check_fun(db_type)",
        "+ ",
        "  }",
        "+ ",
        "  # search_result <- search_result",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "param <- \"\"",
        "> ",
        "search_result <- \"\"",
        "> ",
        "",
        "> ",
        "db_check_fun <- function(db_type) {",
        "+ ",
        "  if(db_type == 'varsome_19') {",
        "+ ",
        "    request_body(varraint_array)",
        "+ ",
        "    varsome_19_obj$body <- variants_char",
        "+ ",
        "    param <- varsome_19_obj",
        "+ ",
        "    print(varsome_19_obj$body)",
        "+ ",
        "  }else if(db_type == 'varsome_liftover') {",
        "+ ",
        "    param <- varsome_liftover_obj",
        "+ ",
        "  }else if(db_type == 'varsome_38') {",
        "+ ",
        "    param <- varsome_38_obj",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  search_result <- connect_function(param) # list[[1]]: param_type, list[[2]]: list ---> searched information",
        "+ ",
        "  calculate_score(search_result,db_type)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "db_check_fun(db_type)",
        "character(0)\n[1] \"inter API part\"\n",
        "Error in curl::curl_fetch_memory(url, handle = handle) : \n  Couldn't connect to server\n",
        "Called from: curl::curl_fetch_memory(url, handle = handle)\n",
        "Browse[1]> ",
        "c",
        "> ",
        "# cosmic doesn`t` provide API for connecting database, so dirrectly download database to use  ",
        "> ",
        "# install.packages(\"promises\")  ",
        "> ",
        "# library(promises)  ",
        "> ",
        "",
        "> ",
        "# connect db",
        "> ",
        "getwd()",
        "[1] \"/Users/stan/Desktop/internship project/project/var_int_project\"\n",
        "> ",
        "source(\"Rcode/db_connect_common.R\")",
        "Error in install.packages : Updating loaded packages\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-x86_64/contrib/4.3/sqldf_0.4-11.tgz'\n",
        "\nRestarting R session...\n\n"
    ]
}